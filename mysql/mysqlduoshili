#!/usr/bin/env python
#-*- coding:utf-8 -*-
'''
mysql 多实例
    简单说就是一台机器上开启多个不同的服务端口（如3306 3307），运行多个mysql服务进程，进程通过不同的socket监听不同的服务端口来提供各自的服务
    多实例公用一套mysql安装程序，使用不同的my.cnf配置文件，启动程序，数据文件。在提供服务时，mysql在逻辑上看来是各自独立的，多个实例之间是根据配置文件的设定值，来取得相关服务器的硬件资源
    其实很多服务都可以有多实例，甚至在门户网站用的很广泛，例如nginx,apachace,haproxy,redis,memcache等都可以多实例，一种架构的手段
http://edu.51cto.com/course/course_id-395.html

多实例的应用
1、有效利用服务器资源
    但单个服务器资源有剩余时，可以充分利用剩余的资源
2、节约服务器资源
    公司资金紧张，但数据库又需要各自尽量独立提供服务，而且需要主从同步等技术时，多实例就再好不过了
3、资源相互抢占问题
    当某个服务实例并发很高或者有慢查询时，整个实例会消耗更多的内存，cpu,磁盘IO资源，导致服务器上的其他实例提供服务质量下降

场景
    资金紧张的公司
        例如3台服务器部署6到9个实例，交叉主从备份等
    并发访问不是很大的业务

多实例配置方案
1、多配置文件方案 推荐方法
    通过配置多个配置文件及多个启动程序来实现多实例的方案，推荐方法
        一个配置文件+一个启动程序 构成一个实例
2、用一个配置文件，多个[mysqld] ，这样方法不好，耦合性高

1、多配置文件方法
  建立mysql多实例的条件
    首先按照我们前面讲过的四种mysql的安装方法之一安装好数据库，如果是编译安装，则到make install之后截止
1、安装mysql,编译安装到make install为止
        曾经单实例安装的数据库文件和启动程序最好删除，否则容易冲突
        mv /usr/local/mysql/data /mnt/data-mysql5.5-single
2、创建mysql多实例的数据目录
    采用不同端口作为二级目录，以区别不同的实例
        mkdir -p /usr/local/mysql/data/{3306,3307}/data
    拷贝各自的配置文件和启动程序文件到各端口目录下3306,3307下
        cp ...  rz ..
    给授权
        chown -R mysql.mysql /usr/local/mysql/data/
    给mysql启动程序 700执行权限
        find /usr/local/mysql/data/ -type f -name 'mysql'|xargs chmod 700
        which mysql 看一下mysql 全局路径
    初始化数据库
        mysql_install_db --basedir=/usr/local/mysql --datadir=/usr/local/mysql/data/3306/data --user=mysql
    启动数据库
        /usr/local/mysql/data/3306/mysql start
    连接数据库
        mysql -uroot -p -S /usr/local/mysql/data/3306/mysql.sock----本地连接
        mysql -uroot -p -h'192....' -P 3307 -----远程连接不用指定sock,-P指定端口
