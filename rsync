rsync 数据同步服务
    rsync是开源的，快速的，多功能的、可实现全量及增量的本地或远程数据镜像同步备份的优秀工具，rsync适用于unix linux windows 等多种平台

    rsync具有可使本地和远程两台主机之间的数据快速复制同步镜像，远程备份等功能，这个功能类似scp，但由于scp的功能，当然，rsync还可以在本地主机的不同分区或目录之间全量及增量的复制数据，这类似cp命令，同样也优于cp命令
    rsync还可以实现类似rm的删除功能
关键字 全量，增量，本地，远程 同步备份工具

在同步备份默认下，rsync通过其独特的‘quick check’ 算法，仅同步大小或者最后修改时间发生变化的文件或目录。
    通过参数设置可以实现其他标准的同步，权限变化，某一文件的内容变化同步

rsync的特性：
    支持拷贝特殊文件，如链接，设备等
    可以有排除指定文件或目录的同步的功能，相当于打包命令的排除功能
    可以做到保持原来文件或目录的权限、时间、软硬链接,属主，组等所有属性均不改变
    可实现增量同步，即只同步发生数据变化的数据，因此数据传输效率很高
    rsync本身传输是不加密的，可以使用rcp,rsh,ssh,等方式配合传输文件，
    可以直接通过socket（进程方式）传输
    支持匿名的或认证（无需系统用户）的进程传输模式，可实现方便安全的进行数据备份及镜像

rsync的工作方式
    大致三种
    1、主机本地之间的数据传输（此时类似于cp）
    2、借助rcp,ssh等通道来进行数据传输（此时类似scp）
    3、以守护进程的方式传输数据（这个是rsync的重要功能）
使用
1、本地传输模式
    rsync [option] SRC... [DEST]
    语法说明
        1.rsync为同步命令
        2.[option] 为同步时的参数选项
        3.SRC为源，及等待拷贝的分区，文件，或目录等
        4.[DEST]为目标分区，文件或目录等

2、通过远程shell 进行数据传输
    拉取pull   rsync [opition] [USER@]HOST:SRC... [DEST]
    推送push   rsync [option] SRC... [USER@]HOST:DEST
        拉取语法实例
            rsync -vzrtopgP -e 'ssh -p 22' sshfenfa@192.168.1.121:/opt /tmp
        推送语法实例
            rsync -vzrtopP -e 'ssh -p 22' /etc sshfenf@192.168.1.122:/tmp
                -vzrtopg 相当于-avz 表示同步时文件和目录属性不变
                --progress 显示同步的过程，可以用-P替换
                -e 'ssh -p 22' 表示通过ssh的通道传输数据 -p 22可以省略
            -avz是常用的参数
3、使用守护进程的方式数据传输
    通过守护进程方式传输同样分为两种情况，每种情况又有两种语法写法
        拉取：
            1.rsync [option] [USER@]HOST::SRC... [DEST]
            2.rsync [option] rsync://[USER@]HOST[:PORT]/SRC... [DEST]
        推送：
            1.rsync [option] SRC... [USER@]HOST::DEST
            2.rsync [option] SRC... rsync://[USER@]HOST[:PORT]/DEST
    注意，与远程shell方式命令不同的是，第一种语法，均为双冒号链接SRC与DEST,另外，这个SRC或DEST不再是路径了，而是守护进程中配置的模块名称

rsync命令参数选项
    -v，--verbose 详细模式输出，传输时的进度等信息
    -z,--compress 传输时进行压缩以提高传输效率 --compress-level=NUM 可按级别压缩
    -r,--recursive 对子目录以递归模式，即目录下所有文巨都同样传输
    -t,--times保持文件时间信息
    -a,--archive 归档模式，以递归的模式传输，并保持所有文件属性，相当于-rlptgoD
    -P,--progress，显示同步过程，相似与-v
    -e,加通道的
    --exclude=PATTERN 指定排除的信息

关键点
注意命令差别
    1. rsync -avz /opt/ /tmp
        /opt/意思是仅把/opt/目录里面的内容同步过来，opt目录本身并不同步；而/opt表示把opt本身及其内容全部同步，要注意区别

rsync 最重要的应用
以守护进程（socket）的方式传输数据

机器准备 A-server rsync服务端  B-server  rsync节点  C-server rsync节点

具体需求
    要求在A-server上以rsync守护进程的方式部署rsync服务，使得所有客户端主机，可以把本地数据通过rsync的方式到数据备份服务器A-server上，客户端服务器以B,C为例 图21

开始部署rsync服务-rsync服务端操作
1.配置rsyncd.conf
    确认rsync软件是否安装
[root@6.4-121 ~]#rpm -qa rsync
rsync-3.0.6-12.el6.x86_64
[root@6.4-121 ~]#
    编辑配置文件，rsync默认没有配置文件，需要新建/etc/rsyncd.conf  注意rsyncd不要丢了d
        #rsync_config_________________________start
        #created by dean 9:25 2016-8-9
        #QQ email
        ##rsyncd.conf start##
        uid = rsync               rsync使用的用户，缺省值为-2，通常为nobody
        gid = rsync             组，通用户
        use chroot = no       如果为true,daemon会在给客户端传输文件前“chroot to the path” 这是一个rsync的安全配置，内网使用不配也可以
        max connections = 200     最大连接数
        timeout = 300         超时时间    默认是0意思是no time，单位秒，建议300-600
        pid file = /var/run/rsyncd.pid     rsync启动后将进程写入这个文件，如果文件已经存在，rsync不会启动，会终止，此时需要删掉文件重新启动
        lock file = /var/run/rsync.lock 指定lock文件用来支持 max connections 参数，使得总连接数不会超过限制
        log file = /var/log/rsyncd.log  日志文件，不设置或者错误设置，rsync会使用syslog输出日志信息
        [oldboy]  模块名
        path = /dean/ 服务端物理路径
        ignore errors  忽略I/O错误
        read only = false   true的话是只读，false是可写，默认是true,只有false情况下，客户端才能上传文件
        list = false   是否允许客户端查看可用模块列表，默认是可以
        hosts allow = 192.168.1.1/24 指定可以链接的客户端主机名和ip 或地址段 ip段
        hosts deny = 0.0.0.0/32 指定不可以链接的客户端主机名和ip 或地址段 ip段，默认没有此参数，及都可以链接
        auth users = rsync_backup  指定空格或逗号分隔的用户可以使用哪些模块，用户不需要在本地系统中存在，默认所有用户无密码访问（anonymous rsync）
        secrets file = /etc/rsync.password 指定用户名密码存放文件格式  用户名:密码
        #rsync_config__________________________end
2. 处理添加路径 /dean, 用户添加useradd rsync -s /sbin/nologin -M,目录授权，chown -R rsync.rsync /dean
3.配置用于rsync同步的账号，密码及账号文件权限
    echo "rsync_backup:123456" > /etc/rsync.password
        其中rsync_backup:123456中的rsync_backup为同步传输用到的虚拟账号，这个账号仅为rsync的账号，不需要是系统账号，后面的123456为密码，不超过8位，中心用：号分割
    chmod 600 /etc/rsync.password 必须为600权限，因为密码是明文的，所以设置600安全，进root能修改查看
    cat /etc/rsync.password
    ll /etc/rsync.password
4.启动rsync服务
    以守护进程方式来启动rsync服务
        rsync --daemon      --daemon表示以守护进程方式启动
        拓展rsync的参数选项
            --daemon
            --address  绑定ip地址提供服务
            --config=file 更改配置文件路径，而不是默认的/etc/rsyncd.conf
            --port=prot  更改其它端口提供服务，而不是缺省的873端口
            提示，以上几个选项仅为了解，生产场景使用不多
5.添加至开机启动
    echo "/usr/bin/rsync --daemon" >> /etc/rc.local
        注意：当然还可以使用chkconfig rsync on 命令，但是必须要编写适合chkconfig操作的脚本才行
    重启rsync的组合命令
    pkill rsync   关闭rsync服务
    rsync --daemon 启动rsync服务
    检查启动进程
    ps -ef|grep rsync  检查rsync服务
    启动服务扩展，写一个简单脚本
        
配置客户端
1. 配置rsync账号及账号文件权限
    请注意与服务端的配置的区别
    client端 [192.168.1.122] [192.168.1.123]分别做如下操作
        echo "123456" > /etc/rsync.password  这里进配置密码，密码是服务端设置的rsync_backup的密码,不需要账号，与服务端的区别，rsync。password不一定需要与服务端一至
        chmod 600 /etc/rsync.password   必须600，明文存储的密码
        cat /etc/rsync.password
        ll /etc/rsync.password
    配置完成       

客户端操作
推送（从客户端同步文件或目录到服务端）
    从客户端推送/etc 目录到服务端rsync指定的目录  /dean 下
        命令模式一：
        rsync -avzp etc_2016-08-09.tar.gz rsync_backup@192.168.1.121::oldboy  需要密码
        rsync -avzp etc_2016-08-09.tar.gz rsync_backup@192.168.1.121::oldboy --password-file=/etc/rsync.password
        命令模式二：
        rsync -avzp etc_2016-08-09.tar.gz rsync://rsync_backup@192.168.1.121/oldboy --password-file=/etc/rsync.password 
    其中的oldboy 是指的服务端配置文件中模块名字

du -sh 查看目录大小 du -sh /*

问题排错
    1.No route to host问题
        防火墙阻挡，解决：先telnet ip 873,如果出现connection refuse字样，说明防火墙阻挡，或者服务没开启
    2.auth failed on module oldboy
        配置文件没搞对
备份题：备份全网服务数据
图23


拉取除了用于下载
也可以用于分发

排除打包的参数
tar --exclude=FILE -zcvf a.tar.gz ./
tar -ztvf a.tar.gz  不解压情况下 查看压缩包里的文件

rsync的排除命令
    --exclude=PATTERN      exclude file matching PATTERN
    --exclude-from=FILE    read exclude patterns from FILE

exclude=file 还可以写入服务端的/etc/rsyncd.conf
    提示 服务端的排除参数用于客户端拉取时排除，客户端推送时排除在命令行加入--exclude=file

超级重要参数 --delete  删除参数
    本地文件删除
    mkdir null
    rsync -avz --delete null/ /tmp/
        解释：rsync --delete /tmp/ /mnt/  这命令是copy /tmp下的东西到/mnt下，如果/tmp下没有的东西，/mnt下即使有也会删除，所以可以利用建立空目录，rsync -avz --delete null/ 192.1681.1.122/  来删除192.168.1.122里的内容，可以删除大文件
    
    两边无差异同步,内容完全一致
    rsync -avz --delete null/ rsync_backup@192.168.1.121::oldboy/ --password-file=/etc/rsync.password  推送使用要特别小心，容易把目录干掉
    拉取更要注意，别把根目录干掉
    小结论：
        执行--delete 参数从rsync服务端往rsync客户端拉取数据时，一定要小心，最好不要用。它比从rsync客户端带--delete参数往rsync服务端推送危险的多，客户端带--delete参数往服务端推送仅删除服务端模块下的数据，而前者有能力删除rsync客户端本地的所有数据包括根目录下的

rsync无差异同步生产场景的应用：
    一般是有需要两台服务器之间，必须要求数据一致，且实时性又不是很高的情况，如：两台负载均衡下面web服务器之间的同步，或者高可用双机配置之间的同步等，rsync无差异同步非常的危险，而且，有很多替代方案，因此，生产场景没有特殊需求，应避免使用

多模块 多用户
分模块配置差别项，通用的项放到模块外

服务端部署流程回顾
    1、配置rsync的配置文件，默认没有，需要创建 /etc/rsyncd.conf
    2、创建rsync用户和同步的本地目录/oldboy 并根据需要授权目录属主属组为rsync
        目录和/etc/rsync.password为配置文件中path = /oldboy/参数的配置，密码文件权限600
    3、账号及密码文件配置
        echo "rsync_backup:oldboy123" > /etc/rsync.password
        chmod 600 /etc/rsync.pasword
    提示：
        a、/etc/rsync.password 为配置文件中secrets file = /etc/rsync.password 参数的配置
        b、账号rsync_backup 为 /etc/rsync.password 为配置文件中auth users = rsync_backup 参数的配置
    4、启动rsync服务
       rsync --daemon
        echo "/usr/bin/rsync --daemon" >> /etc/rc.local
        cat /etc/rc.loacl|grep daemon 
        ps -ef|grep rsync
    5、重起
        pkill rsync
        rsync --daemon
        ps -ef|grep rsync
客户端配置流程
        echo "服务端设置的密码" > /etc/rsync.password
        chmod 600 /etc/rsync.password
            提示客户端的密码文件路径名字和服务端不要求一致，密码一致即可
客户端操作细节
    推送，抓取
    推送
    rsync -avz /tmp/ rsync_backup@ip::/oldboy/ --password-file=/etc/rsync.password
        #rsync -vzrtopgP 。。。。。。。......
    rsync -avz --delete /tmp/ rsync_backup@ip::/oldboy/ --password-file=/etc/rsync.password
    抓取
    路径反向操作，注意--delete慎重使用

rsync服务端排错思路
    
1、查看rsync服务配置文件路径是否正确，正确默认路径为：/etc/rsyncd.conf
2、查看配置文件里host allow,host deny,允许ip网段是否允许客户端访问ip网段
3、查看配置文件中path参数里的路径是否存在，权限是否正确（正常应为配置文件中的UID参数对应的属主和属组）
4、查看rsync服务是否启动。查看命令为ps -ef|grep rsync,端口是否存在 netstat -lntup|grep 873
5、查看iptables防火墙和selinux是否开启允许rsync服务通过，也可以考虑关闭
6、查看服务端rsync配置的密码文件是否权限为600，密码文件格式是否正确,正确格式 用户名:密码，文件配置路径在 secrect files参数对应
7、如果是推送数据，要查看下，配置rsyncd.conf文件中用户是否对模块下目录有可读写的权限

rsync客户端排错思路
1、查看客户端rsync配置的密码文件是否为600的权限，密码文件格式是否正确，注意仅需要密码，并且和服务端密码一致
2、用telnet链接rsync服务器ip地址873端口，查看服务是否启动（可测试服务端防火墙是否阻挡） telnet 192.168.1.121 873
3、客户端执行命令时，rsync -avz rsync_backup@192.168.1.121::oldboy/test/ /test/ --password-file=/etc/rsync.password
    此命令的细节要记清楚，尤其是192.168.1.121::/oldboy/test/处的双冒号及其随后的oldbiy的斜线多一个少一个 细节

自我模拟排错

sersync
    主要是由rsync+inotify的组合使用，包含一些过滤项
rsync+inotify
    inotify 是一种强大的、细粒度的、异步的文件系统事件监控机制，linux内核从2.6.13起，加入了inotify支持，通过inotify可以监控文件系统中添加、删除、修改、移动等各种事件，利用这个内核接口，第三方软件就可以监控文件系统下文件的各种变化情况，而inotify-tools正是实施这个监控的软件

配置
1、rsync客户端先要实现能向rsync服务端推送文件，这是基础
开始安装：
rsync客户端：（inotify的服务端）
    下载inotify-tools, wget https://github.com/rvoicilas/inotify-tools/archive/master.zip，去git上下载
    查看文件系统是否支持inotify ,如果存在以下这三个文件，及表示支持
        [root@6.4-122 tools]#ll /proc/sys/fs/inotify
        total 0
        -rw-r--r-- 1 root root 0 Aug 12 15:56 max_queued_events
        -rw-r--r-- 1 root root 0 Aug 12 15:56 max_user_instances
        -rw-r--r-- 1 root root 0 Aug 12 15:56 max_user_watches
        [root@6.4-122 tools]#


