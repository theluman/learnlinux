1、测试语句
test [  ] [[]]
格式一  test <测试表达式>
格式二  [ <测试表达式> ]  
格式三  [[ <测试表达式> ]]

说明：
格式1和格式2是等价的，常用格式二[  ]
格式3为扩展的test命令

提示：
1、在[[]]中可以使用通配符进行模式匹配
2、&&,||,>,<等操作符可以应用于[[]]中，但不能用于[]中
3、对整数进行关系运算，也可以使用shell的算数运算符

    [dean@deanarch ~]$ [ -f 1.txt && -d foler ] && echo 1 || echo 0
    -bash: [: missing `]'
    0
    [dean@deanarch ~]$ [ -f 1.txt -a -d foler ] && echo 1 || echo 0
    0
    [dean@deanarch ~]$ [ -f 1.txt ] && [ -d foler ] && echo 1 || echo 0
    0
    [dean@deanarch ~]$ [[ -f 1.txt && -d foler ]] && echo 1 || echo 0
    0
    [dean@deanarch ~]$ 

help test 查看判断选项，选项同样适用于[  ] 和[[  ]]

test: test [expr]
    Evaluate conditional expression.
    
    Exits with a status of 0 (true) or 1 (false) depending on
    the evaluation of EXPR.  Expressions may be unary or binary.  Unary
    expressions are often used to examine the status of a file.  There
    are string operators and numeric comparison operators as well.
    
    The behavior of test depends on the number of arguments.  Read the
    bash manual page for the complete specification.
    
    File operators:
    
      -a FILE        True if file exists.
      -b FILE        True if file is block special.
      -c FILE        True if file is character special.
      -d FILE        True if file is a directory.
      -e FILE        True if file exists.
      -f FILE        True if file exists and is a regular file.
      -g FILE        True if file is set-group-id.
      -h FILE        True if file is a symbolic link.
      -L FILE        True if file is a symbolic link.
      -k FILE        True if file has its `sticky' bit set.
      -p FILE        True if file is a named pipe.
      -r FILE        True if file is readable by you.
      -s FILE        True if file exists and is not empty.
      -S FILE        True if file is a socket.
      -t FD          True if FD is opened on a terminal.
      -u FILE        True if the file is set-user-id.
      -w FILE        True if the file is writable by you.
      -x FILE        True if the file is executable by you.
      -O FILE        True if the file is effectively owned by you.
      -G FILE        True if the file is effectively owned by your group.
      -N FILE        True if the file has been modified since it was last read.
    
      FILE1 -nt FILE2  True if file1 is newer than file2 (according to
                       modification date).
    
      FILE1 -ot FILE2  True if file1 is older than file2.
    
      FILE1 -ef FILE2  True if file1 is a hard link to file2.
    
    String operators:
    
      -z STRING      True if string is empty.
    
      -n STRING
         STRING      True if string is not empty.
    
      STRING1 = STRING2
                     True if the strings are equal.
      STRING1 != STRING2
                     True if the strings are not equal.
      STRING1 < STRING2
                     True if STRING1 sorts before STRING2 lexicographically.
      STRING1 > STRING2
                     True if STRING1 sorts after STRING2 lexicographically.
    
    Other operators:
    
      -o OPTION      True if the shell option OPTION is enabled.
      -v VAR	 True if the shell variable VAR is set
      -R VAR	 True if the shell variable VAR is set and is a name reference.
      ! EXPR         True if expr is false.
      EXPR1 -a EXPR2 True if both expr1 AND expr2 are true.
      EXPR1 -o EXPR2 True if either expr1 OR expr2 is true.
    
      arg1 OP arg2   Arithmetic tests.  OP is one of -eq, -ne,
                     -lt, -le, -gt, or -ge.
    
    Arithmetic binary operators return true if ARG1 is equal, not-equal,
    less-than, less-than-or-equal, greater-than, or greater-than-or-equal
    than ARG2.
    
    Exit Status:
    Returns success if EXPR evaluates to true; fails if EXPR evaluates to
    false or an invalid argument is given.

文件常用
    -a -f -d -r -w -x -s -nt -ot
字符串常用
    -z "字符串" zero  如字符串长度为0则为真
        [ -z "$myvar" ]
    -n "字符串" no zero 如字符串长度不为0为真
    "string1"=="string2"
    "string1"!="string2"
整数常用
    -eq -ne -gt -lt -ge -le
辑操作符，逻辑操作符实现更复杂的条件测试
 +---------------+-----------------+
 |  在[]中使用的 |  在[[]]中使用的 |
 +---------------+-----------------+
 |  -a           |  &&             |
 +---------------+-----------------+
 |  -o           |  ||             |
 +---------------+-----------------+
 |  !            |  !              |
 +---------------+-----------------+

 判断完需要执行一组命令可以使用大括号
 [ 3 -eq 3 ] && {
    echo '1'
    echo '2'
 }

 时间read cat打印菜单 menu.sh
