变量分为环境变量全局变量）和局部变量
+--------+---------------------------------------+
|环境变量|创建在父shell及任意子shell中           |
+--------+---------------------------------------+
|局部变量|只能在创建他们的shell函数中或脚本中使用|
+--------+---------------------------------------+

    环境变量用于定义shell的运行环境，保证shell命令的正确执行，shell通过环境变量来确定登录用户名，命令路径，终端类型，登录目录等，所有的环境变量都是系统全局变量，可用于所有子进程中，这包括编辑器，shell脚本各类应用等
    环境变量可以再命令行中设置，但用户退出时这些变量值会丢失，永久生效需要在~/.bash_profile或/etc/profile或/etc/profile.d/中定义，将环境变量放入profile中，每次用户登录时这些变量值都会被初始化
    传统上，所有环境变量都是大写，环境变量应用于用户进程前，必须用export命令导出
    环境变量可用于创建他们的shell和从该shell派生的任意子shell或进程中，通常称环境变量为全局变量以区别局部变量，环境变量应大写，环境变量是已经用export内置命令导出的变量。
    有一些环境变量，比如HOME PATH，SHELL，UID，USER等，在用户登录前就已经被/bin/login程序设置好了。通常环境变量定义并保存在用户家目录下的.bash_profile文件中
    echo $USER
    unset USER
    `` 先执行命令在输出
    '' 不解析，直接输出 所见即所得
    "" 解析变量内容在输出
希望原样输出用单引号，默认用双引号，纯数字连续的不用引号

变量的命名规范
    大写,定义清晰
    APACHE_ERR_NUM
$(date +%F).sql  $() 先执行date+%F命令，连接后面.sql一起输出，$()等同于``，但优于``

${UID}.sql      ${}将$UID输出并连接后面的.sql，非执行命令

mkdir $(echo {a..f})  <==> mkdir {a..f}

相当重点*****
位置变量
$0 获取当前执行的shell脚本的文件名，包括路径
$n 获取当前执行的shell脚本的第n个参数值，n取值1到9，如果n大于9,要用${10}
$* 获取当前shell的所有参数，将所有的命令行参数视为单个字符串，相当于“$1$2$3...”
$# 获取shell命令行中参数的总个数
$@ 这个程序的所有参数“$1” "$2" "$3" "...",这是讲参数传递给其他程序的最佳方式




    


